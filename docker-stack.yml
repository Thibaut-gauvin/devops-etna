####
# This file is used to deploy the tick_stack in docker swarm
# To run tick_stack locally, use the "docker-compose.yml" file
#
# To deploy in CLI with your hands, use this command :
# docker stack deploy --compose-file docker-stack.yml tick_stack


version: '3.2'

services:

    proxy:
        image: traefik:latest
        command:
            - --web
            - --logLevel=DEBUG
            - --docker.domain=tick-stack.com
            - --docker
            - --docker.watch
            - --docker.swarmmode
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "/dev/null:/traefik.toml"
        deploy:
            placement:
                constraints: [node.role == manager]
            labels:
                - "traefik.enable=false"
        networks:
            - traefik

    visualizer:
        image: 127.0.0.1:5000/dockersamples/visualizer:stable
        depends_on:
            - proxy
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            placement:
                constraints: [node.role == manager]
            labels:
                - "traefik.enable=true"
                - "traefik.port=8080"
                - "traefik.backend=visualizer"
                - "traefik.frontend.rule=Host:visualizer.tick-stack.com"
                - "traefik.docker.network=tick_stack_traefik"
        networks:
            - tick_stack
            - traefik

    mongo:
        image: 127.0.0.1:5000/mongo:latest
        depends_on:
            - proxy
        volumes:
            - "db-data:/data/db"
        ports:
            - "27017:27017"
        deploy:
            placement:
                constraints: [node.role == manager]
            labels:
                - "traefik.enable=false"
        networks:
            - tick_stack

    mongo_express:
        image: 127.0.0.1:5000/mongo-express:latest
        depends_on:
            - mongo
        environment:
            - "ME_CONFIG_MONGODB_ENABLE_ADMIN=true"
            - "ME_CONFIG_BASICAUTH_USERNAME=etna"
            - "ME_CONFIG_BASICAUTH_PASSWORD=devops"
        deploy:
            labels:
                - "traefik.enable=true"
                - "traefik.port=8081"
                - "traefik.backend=mongo_express"
                - "traefik.frontend.rule=Host:mongo.tick-stack.com"
                - "traefik.docker.network=tick_stack_traefik"
        networks:
            - tick_stack
            - traefik

    catalog_service:
        image: 127.0.0.1:5000/catalog_service:1.1
        depends_on:
            - mongo
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
                failure_action: continue
                monitor: 60s
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 30s
            labels:
                - "traefik.enable=true"
                - "traefik.port=3000"
                - "traefik.backend=catalog_service"
                - "traefik.frontend.rule=PathPrefix:/catalog"
                - "traefik.docker.network=tick_stack_traefik"
        networks:
            - tick_stack
            - traefik

    booking_service:
        image: 127.0.0.1:5000/booking_service:1.1
        depends_on:
            - mongo
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
                failure_action: continue
                monitor: 60s
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 30s
            labels:
                - "traefik.enable=true"
                - "traefik.port=3000"
                - "traefik.backend=booking_service"
                - "traefik.frontend.rule=PathPrefix:/booking"
                - "traefik.docker.network=tick_stack_traefik"
        networks:
            - tick_stack
            - traefik

    billing_service:
        image: 127.0.0.1:5000/billing_service:1.1
        depends_on:
            - mongo
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
                failure_action: continue
                monitor: 60s
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 30s
            labels:
                - "traefik.enable=true"
                - "traefik.port=3000"
                - "traefik.backend=billing_service"
                - "traefik.frontend.rule=Host:PathPrefix:/billing"
                - "traefik.docker.network=tick_stack_traefik"
        networks:
            - tick_stack
            - traefik


networks:
    tick_stack:
    traefik:


volumes:
    db-data:
        external: true
