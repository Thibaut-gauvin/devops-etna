################################
# The TICK stack
#

version: '3'

services:

    nginx:
        image: nginx
        ports:
            - "${NGINX_LISTEN_PORT}:80"
            - "${NGINX_HTTPS_LISTEN_PORT}:443"
        links:
            - "symfony:symfony"
        volumes:
            - "./../..:/home/docker:z"
            - "./.docker_volumes/logs:/var/logs/nginx:Z"
            - "./default.conf:/etc/nginx/conf.d/default.conf:ro"
            - "./ssl:/etc/nginx/ssl:ro"
        networks:
          - tick_stack

    symfony:
        image: docker_symfony
        links:
            - "db:db"
        volumes:
            - "./../..:/home/docker:z"
            - "./php.ini:/usr/local/etc/php/conf.d/custom.ini:ro"
        working_dir: "/home/docker"
        networks:
          - tick_stack

    db:
        image: mysql:5.7
#        deploy:
#            replicas: 3
#            update_config:
#                parallelism: 2
#                delay: 10s
#            restart_policy:
#                condition: on-failure
        user: "1000:50"
        environment:
            - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
            - "MYSQL_USER=${MYSQL_USER}"
            - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
            - "MYSQL_DATABASE=${MYSQL_DATABASE}"
        ports:
            - "${MYSQL_LISTEN_PORT}:3306"
        volumes:
          - "./.docker_volumes/db:/var/lib/mysql"
        networks:
          - tick_stack

    visualizer:
        image: dockersamples/visualizer:stable
        ports:
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - tick_stack

networks:

  tick_stack:


####
# docker stack deploy --compose-file docker-compose.yml tick_stack
