---
- name: Update apt cache
  become: true
  when: "'docker-nodes' in group_names"
  apt:
    update_cache: yes

- name: Install required packages for Docker-CE
  become: true
  when: "'docker-nodes' in group_names"
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates
    - libffi-dev
    - libssl-dev
    - curl
    - wget
    - gnupg2
    - software-properties-common

- name: Install docker GPG key
  become: true
  when: "'docker-nodes' in group_names"
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present

- name: Add docker apt repository
  become: true
  when: "'docker-nodes' in group_names"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
    state: present

- name: Update apt-cache
  become: true
  when: "'docker-nodes' in group_names"
  apt:
    update_cache: yes

- name: Purge the old repo if it exists
  become: true
  when: "'docker-nodes' in group_names"
  apt:
    name: "{{ item }}"
    purge: yes
  with_items:
    - "lxc-docker*"
    - "docker.io*"
    - "docker-engine"
  ignore_errors: yes

- name: Install Docker-CE
  become: true
  when: "'docker-nodes' in group_names"
  apt:
    name: docker-ce
    state: present
  notify: Start Docker

- name: Add vagrant user to docker & sudo group
  become: true
  when: "'docker-nodes' in group_names"
  user:
    name: vagrant
    shell: /bin/bash
    groups: docker,sudo
    append: yes

- name: Check if pip is installed
  when: "'docker-nodes' in group_names"
  stat: "path=/usr/local/bin/pip"
  register: pip_bin

- name: Download get-pip.py
  become: true
  when: "'docker-nodes' in group_names and not pip_bin.stat.exists"
  get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /tmp/get-pip.py

- name: Install pip using get-pip.py script
  become: true
  command: "python get-pip.py"
  when: "'docker-nodes' in group_names and not pip_bin.stat.exists"
  args:
    chdir: /tmp

- name: Check if docker-compose is installed
  when: "'docker-nodes' in group_names"
  stat: "path=/usr/local/bin/docker-compose"
  register: docker_compose_bin

- name: Install docker-compose
  become: true
  when: "'docker-nodes' in group_names and not docker_compose_bin.stat.exists"
  get_url:
    url: https://github.com/docker/compose/releases/download/1.13.0/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 0755

- name: Erase docker py packages
  become: true
  when: "'docker-nodes' in group_names and not docker_compose_bin.stat.exists"
  pip:
    name: "{{ item }}"
    state: absent
  with_items:
    - docker-py
    - docker
    - docker-compose

- name: Fix bug with docker_service modules
  become: true
  when: "'docker-nodes' in group_names and not docker_compose_bin.stat.exists"
  pip:
    name: docker-compose
    version: 1.13.0
